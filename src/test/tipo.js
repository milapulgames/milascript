Mila.Modulo({necesita:['../tipo','../test']});

Mila.Test.Evaluar_([
  {i:"Mila.Tipo.esNada(Mila.Nada)", o:true,                           d:"esNada devuelve true con un Nada (1)"},
  {i:"Mila.Nada.esNada()", o:true,                                    d:"esNada devuelve true con un Nada (2)"},
  {i:"Mila.Tipo.esNada(null)", o:true,                                d:"esNada devuelve true con un null"},
  {i:"Mila.Tipo.esNada(undefined)", o:true,                           d:"esNada devuelve true con un undefined"},
  {i:"Mila.Tipo.esNada(NaN)", o:true,                                 d:"esNada devuelve true con un NaN (1)"},
  {i:"(NaN).esNada()", o:true,                                        d:"esNada devuelve true con un NaN (2)"},
  {i:"(2).esNada()", o:false,                                         d:"esNada devuelve false con un número"},
  {i:"(true).esNada()", o:false,                                      d:"esNada devuelve false con un booleano"},
  {i:"('hola').esNada()", o:false,                                    d:"esNada devuelve false con un texto"},
  {i:"(x=>true).esNada()", o:false,                                   d:"esNada devuelve false con una función"},
  {i:"({}).esNada()", o:false,                                        d:"esNada devuelve false con un objeto"},
  {i:"([]).esNada()", o:false,                                        d:"esNada devuelve false con una lista"},
  {i:"(Mila.Tipo.Booleano).esNada()", o:false,                        d:"esNada devuelve false con un tipo"},
  {i:"Mila.Tipo.esAlgo(Mila.Nada)", o:false,                          d:"esAlgo devuelve false con un Nada (1)"},
  {i:"Mila.Nada.esAlgo()", o:false,                                   d:"esAlgo devuelve false con un Nada (2)"},
  {i:"Mila.Tipo.esAlgo(null)", o:false,                               d:"esAlgo devuelve false con un null"},
  {i:"Mila.Tipo.esAlgo(undefined)", o:false,                          d:"esAlgo devuelve false con un undefined"},
  {i:"Mila.Tipo.esAlgo(NaN)", o:false,                                d:"esAlgo devuelve false con un NaN (1)"},
  {i:"(NaN).esAlgo()", o:false,                                       d:"esAlgo devuelve false con un NaN (2)"},
  {i:"(2).esAlgo()", o:true,                                          d:"esAlgo devuelve true con un número"},
  {i:"(true).esAlgo()", o:true,                                       d:"esAlgo devuelve true con un booleano"},
  {i:"('hola').esAlgo()", o:true,                                     d:"esAlgo devuelve true con un texto"},
  {i:"(x=>true).esAlgo()", o:true,                                    d:"esAlgo devuelve true con una función"},
  {i:"({}).esAlgo()", o:true,                                         d:"esAlgo devuelve true con un objeto"},
  {i:"([]).esAlgo()", o:true,                                         d:"esAlgo devuelve true con una lista"},
  {i:"(Mila.Tipo.Booleano).esAlgo()", o:true,                         d:"esAlgo devuelve true con un tipo"},
  {i:"(Mila.Nada).tipo()", o:Mila.Tipo.Nada,                          d:"tipo devuelve el tipo Nada con Nada"},
  {i:"Mila.Tipo.tipo(null)", o:Mila.Tipo.Nada,                        d:"tipo devuelve el tipo Nada con null"},
  {i:"Mila.Tipo.tipo(undefined)", o:Mila.Tipo.Nada,                   d:"tipo devuelve el tipo Nada con undefined"},
  {i:"(NaN).tipo()", o:Mila.Tipo.Nada,                                d:"tipo devuelve el tipo Nada con NaN"},
  {i:"(2).tipo()", o:Mila.Tipo.Numero,                                d:"tipo devuelve el tipo Numero con un entero"},
  {i:"(1.5).tipo()", o:Mila.Tipo.Numero,                              d:"tipo devuelve el tipo Numero con un flotante"},
  {i:"(Infinity).tipo()", o:Mila.Tipo.Numero,                         d:"tipo devuelve el tipo Numero con infinito"},
  {i:"(true).tipo()", o:Mila.Tipo.Booleano,                           d:"tipo devuelve el tipo Booleano con un booleano"},
  {i:"('hola').tipo()", o:Mila.Tipo.Texto,                            d:"tipo devuelve el tipo Texto con un texto"},
  {i:"(x=>true).tipo()", o:Mila.Tipo.Funcion,                         d:"tipo devuelve el tipo Funcion con una función"},
  // {i:"({}).tipo()", o:Mila.Tipo.Registro,                             d:"tipo devuelve el tipo Registro con un objeto"},
  {i:"(Mila.Tipo.Booleano).tipo()", o:Mila.Tipo.Tipo,                 d:"tipo devuelve el tipo Tipo con un tipo"},
  {i:"(Mila.Nada).esUnTipo()", o:false,                               d:"esUnTipo devuelve false con Nada"},
  {i:"Mila.Tipo.esUnTipo(null)", o:false,                             d:"esUnTipo devuelve false con null"},
  {i:"Mila.Tipo.esUnTipo(undefined)", o:false,                        d:"esUnTipo devuelve false con undefined"},
  {i:"(NaN).esUnTipo()", o:false,                                     d:"esUnTipo devuelve false con NaN"},
  {i:"(2).esUnTipo()", o:false,                                       d:"esUnTipo devuelve false con un número"},
  {i:"(true).esUnTipo()", o:false,                                    d:"esUnTipo devuelve false con un booleano"},
  {i:"('hola').esUnTipo()", o:false,                                  d:"esUnTipo devuelve false con un texto"},
  {i:"(x=>true).esUnTipo()", o:false,                                 d:"esUnTipo devuelve false con una función"},
  {i:"({}).esUnTipo()", o:false,                                      d:"esUnTipo devuelve false con un objeto"},
  {i:"([]).esUnTipo()", o:false,                                      d:"esUnTipo devuelve false con una lista"},
  {i:"(Mila.Tipo.Booleano).esUnTipo()", o:true,                       d:"esUnTipo devuelve true con un tipo"},
  {i:"('Booleano').esElIdentificadorDeUnTipo()", o:true,              d:"esElIdentificadorDeUnTipo devuelve true con un identificador de tipo"},
  {i:"(Mila.Tipo.Booleano).esElIdentificadorDeUnTipo()", o:false,     d:"esElIdentificadorDeUnTipo devuelve false con un tipo"},
  {i:"(true).esElIdentificadorDeUnTipo()", o:false,                   d:"esElIdentificadorDeUnTipo devuelve false con un dato que ni siquiera es un texto"},
  {i:"(true).esDeTipo_('Booleano')", o:true,                          d:"esDeTipo_ devuelve true al pasar el tipo correcto como texto"},
  {i:"(true).esDeTipo_(Mila.Tipo.Booleano)", o:true,                  d:"esDeTipo_ devuelve true al pasar el tipo correcto como tipo"},
  {i:"(2).esDeTipo_(Mila.Tipo.Booleano)", o:false,                    d:"esDeTipo_ devuelve false al pasar el tipo incorrecto (1)"},
  {i:"(true).esDeTipo_(Mila.Tipo.Numero)", o:false,                   d:"esDeTipo_ devuelve false al pasar el tipo incorrecto (2)"},
  {i:"(true).aTexto()", o:"Cierto",                                   d:"aTexto devuelve 'Cierto' con true"},
  {i:"(false).aTexto()", o:"Falso",                                   d:"aTexto devuelve 'Falso' con false"}
]);